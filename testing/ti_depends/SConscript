#!/usr/bin/env python
import os.path as path
Import('build')
Import('debug')

Env = build.env.Clone()
Env.Append(CPPDEFINES=['USE_NO_EXPORT=1'])

Env.Append(LIBS=['wininet', 'urlmon', 'comctl32', 'comdlg32', 'ole32', 'kernel32', 'user32', 'shell32', 'advapi32', 'gdi32', 'iphlpapi'])

ccf = Env['CCFLAGS'][:]
cflags = Env['CPPDEFINES'][:]

if '/GR' in ccf: 
	ccf.remove('/GR')
	ccf.append('/GR-')
if not debug:
	if '/MD' in ccf: ccf.remove('/MD')
	ccf.append('/MT')
	ccf.append('/Os')
	ccf.append('/O1')
else:
	if '/MDd' in ccf: ccf.remove('/MDd')
	ccf.append('/MTd')
	ccf.append('/RTC1')
Env.Append(CPPDEFINES = ('_WINDOWS', 1))
Env.Append(CPPDEFINES = ('_ATL_STATIC_REGISTRY', 1))
Env.Append(CPPDEFINES = ('_UNICODE', 1))
Env.Append(CPPDEFINES = ('UNICODE', 1))

# This following causes linking to fail on my machine - Martin
# Env.Append(CPPDEFINES = ('_ATL_MIN_CRT', 1))
# Env.Append(LINKFLAGS=['/SUBSYSTEM:CONSOLE'])

sources = Glob("*.cpp") + Env.RES("ti_depends.rc")
out_file = path.join(build.dir, 'ti_depends', 'ti_depends.exe')

p = Env.Program(out_file, sources)
Alias('tidepends', p)

